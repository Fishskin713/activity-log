name: CI Dev Deployment
on:
  push:
    branches: [ main ]

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: build
        run: |
          npm install
          npm install -g @vercel/ncc
          npm run build
          zip -r build.zip .
      - name: Upload Artifact
        uses: actions/upload-artifact@v4
        with:
          name: build-artifact
          path: build.zip

  deploy-dev:
    needs: build
    runs-on: ubuntu-latest
    environment: Development
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4 
      - name: Download Artifact
        uses: actions/download-artifact@v4
        with:
          name: build-artifact

      - name: Release Dev Build
        env:
          GITHUB_TOKEN: ${{ secrets.TOKEN }}
          TAG: ${{ vars.BUILD_TAG }}
          NOTE: ${{ vars.RELEASE_NOTE }}
        run: |
          gh release delete "$TAG" -y || true
          gh release create "$TAG" build.zip --notes "$NOTE"
          
  deploy-staging:
    needs: build
    runs-on: ubuntu-latest
    environment: Staging
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Download Artifact
        uses: actions/download-artifact@v4
        with:
          name: build-artifact

      - name: Verify Artifact
        run: ls -al

      - name: Release Staging Build
        env:
          GITHUB_TOKEN: ${{ secrets.TOKEN }}
          TAG: ${{ vars.BUILD_TAG }}
          NOTE: ${{ vars.RELEASE_NOTE }}
        run: |
          echo "Releasing STAGING version: $TAG"
          gh release delete "$TAG" -y || true
          gh release create "$TAG" build.zip --notes "$NOTE"

  deploy-production:
    needs: deploy-staging
    runs-on: ubuntu-latest
    environment:
      name: Production
      url: 'http://www.myapp.com'
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Download Artifact
        uses: actions/download-artifact@v4
        with:
          name: build-artifact

      - name: Verify Artifact
        run: ls -al

      - name: Release Production Build
        env:
          GITHUB_TOKEN: ${{ secrets.TOKEN }}
          TAG: ${{ vars.BUILD_TAG }}
          NOTE: ${{ vars.RELEASE_NOTE }}
        run: |
          echo "Releasing PRODUCTION version: $TAG"
          gh release delete "$TAG" -y || true
          gh release create "$TAG" build.zip --notes "$NOTE"
